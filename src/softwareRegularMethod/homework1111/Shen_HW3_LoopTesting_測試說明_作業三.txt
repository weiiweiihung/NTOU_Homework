程式碼:
@Test(timeout = 1000) //超過1秒還未回復執行成功則表示失敗
	public void testMethod1() {
	    // 在這裡執行測試程式碼
	    int count = 0;
	    long startTime = System.currentTimeMillis();
	    while (System.currentTimeMillis() - startTime <= 1000) { //1秒內執行幾次
	        // 測試程式碼
	    	String [] strArrPhoneNumber = null;//空值
			String msg = new HW3_LoopTesting_phone().checkPhone(strArrPhoneNumber);
			
			assertEquals(HW3_LoopTesting_Common.ERR_NULL.getContent(), msg);
	        count++;
	    }
	    System.out.println("執行了 " + count + " 次");
	}
test case 1 (測試案例 1)
1) 數值:非常短(空值)
2) 數量:一秒內26874890次
3) 無效值: 非正確格式 空值
 
程式碼:
@Test(timeout = 1000) //超過1秒還未回復執行成功則表示失敗
	public void testMethod2() {
	    // 在這裡執行測試程式碼
	    int count = 0;
	    long startTime = System.currentTimeMillis();
	    while (System.currentTimeMillis() - startTime <= 1000) { //1秒內執行幾次
	        // 測試程式碼
	    	String strPhoneNumber = "1123";
			String [] strArrPhoneNumber = strPhoneNumber.split("(?!^)");//轉array
			String msg = new HW3_LoopTesting_phone().checkPhone(strArrPhoneNumber);
			
			assertEquals(HW3_LoopTesting_Common.ERR_LENGTH.getContent(), msg);
	        count++;
	    }
	    System.out.println("執行了 " + count + " 次");
	}
test case 2 (測試案例 2)
1) 數值:
2) 數量:一秒內673358次
3) 無效值: 非正確格式 1123

程式碼:
@Test(timeout = 1000) //超過1秒還未回復執行成功則表示失敗
	public void testMethod3() {
	    // 在這裡執行測試程式碼
	    int count = 0;
	    long startTime = System.currentTimeMillis();
	    while (System.currentTimeMillis() - startTime <= 1000) { //1秒內執行幾次
	        // 測試程式碼
	    	String strPhoneNumber = "1234567890";
			strPhoneNumber = strPhoneNumber.trim();
			String [] strArrPhoneNumber = strPhoneNumber.split("(?!^)");//轉array
			String msg = new HW3_LoopTesting_phone().checkPhone(strArrPhoneNumber);
			
			assertEquals(HW3_LoopTesting_Common.ERR_FORMAT.getContent(), msg);
	        count++;
	    }
	    System.out.println("執行了 " + count + " 次");
	}
test case 3 (測試案例 3)
1) 數值:
2) 數量:一秒內547200次
3) 無效值: 非正確格式 1234567890

程式碼:
@Test(timeout = 1000) //超過1秒還未回復執行成功則表示失敗
	public void testMethod4() {
	    // 在這裡執行測試程式碼
	    int count = 0;
	    long startTime = System.currentTimeMillis();
	    while (System.currentTimeMillis() - startTime <= 1000) { //1秒內執行幾次
	        // 測試程式碼
	    	String strPhoneNumber = "0112345678";// 第2碼不為9
			String [] strArrPhoneNumber = strPhoneNumber.split("(?!^)");//轉array
			String msg = new HW3_LoopTesting_phone().checkPhone(strArrPhoneNumber);
			
			assertEquals(HW3_LoopTesting_Common.ERR_FORMAT.getContent(), msg);
	        count++;
	    }
	    System.out.println("執行了 " + count + " 次");
	}
test case 4 (測試案例 4)
1) 數值:
2) 數量:一秒內433908次
3) 無效值: 非正確格式 0112345678

程式碼:
@Test(timeout = 1000) //超過1秒還未回復執行成功則表示失敗
	public void testMethod5() {
	    // 在這裡執行測試程式碼
	    int count = 0;
	    long startTime = System.currentTimeMillis();
	    while (System.currentTimeMillis() - startTime <= 1000) { //1秒內執行幾次
	        // 測試程式碼
	    	String strPhoneNumber = "09@@123456";
			String [] strArrPhoneNumber = strPhoneNumber.split("(?!^)");//轉array
			String msg = new HW3_LoopTesting_phone().checkPhone(strArrPhoneNumber);
			
			assertEquals(HW3_LoopTesting_Common.ERR_FORMAT.getContent(), msg);
	        count++;
	    }
	    System.out.println("執行了 " + count + " 次");
	}
test case 5 (測試案例 5)
1) 數值:
2) 數量:一秒內321923次
3) 無效值: 非正確格式 09@@123456

程式碼:
@Test(timeout = 1000) //超過1秒還未回復執行成功則表示失敗
	public void testMethod6() {
	    // 在這裡執行測試程式碼
	    int count = 0;
	    long startTime = System.currentTimeMillis();
	    while (System.currentTimeMillis() - startTime <= 1000) { //1秒內執行幾次
	        // 測試程式碼
	    	String strPhoneNumber = "0912345678";
			String [] strArrPhoneNumber = strPhoneNumber.split("(?!^)");//轉array
			String msg = new HW3_LoopTesting_phone().checkPhone(strArrPhoneNumber);
			
			assertEquals(HW3_LoopTesting_Common.OK.getContent(), msg);
	        count++;
	    }
	    System.out.println("執行了 " + count + " 次");
	}
test case 6 (測試案例 6)
1) 數值:
2) 數量:一秒內161353次
3) 無效值: 無 (正確格式))

案例總共涵蓋總共 Lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
Line coverage: 100%
